decl macros:
  ✔ Move from macros repo debug! decl macro @done(22-03-31 10:19)

proc macros setup:
  ✔ make lib crate for proc macro @done(22-03-31 11:33)
  ✔ make lib.rs file and setup directory layout @done(22-03-31 11:33)
  ✔ link this lib to the main crate's Cargo.toml @done(22-03-31 11:33)
  ✔ make manager-of-things.rs file and export it via lib.rs @done(22-03-31 11:33)

builder.rs:
  ✔ copy from macros repo to here @done(22-03-31 15:00)
  ✔ update lib.rs to export it @done(22-03-31 15:00)

manager_of_things.rs:
  ✔ Based on macros repo create the final "manager" of "things" fn like macro @done(22-03-31 18:41)

developerlife.com content:
  ✔ Update articles on Redux and Proc Macros w/ this new stuff @done(22-03-31 20:06)

r3bl_rs_utils:
  ✔ Extract 2 traits out of manager_of_things.rs & rename the macro @done(22-04-01 07:41)
  ✔ Create my_core_lib crate @done(22-04-01 10:41)
  ✔ Add my_core_lib crate as dep for: @done(22-04-01 10:42)
    ✔ public crate (r3bl_rs_utils), @done(22-04-01 10:42)
    ✔ proc macro crate (my_proc_macros_lib) @done(22-04-01 10:42)
  ✔ Move the 2 core traits into my_core_lib crate @done(22-04-01 10:42)

use the macros:
  ✔ Identify where the new proc macro "manager" of "things" can be used @done(22-04-01 15:03)
  ✔ Refactor existing Redux code to use macros above @done(22-04-01 15:03)
  ☐ sync_reducer.rs
  ☐ async_middleware.rs
  ☐ async_subscriber.rs

README:
  ☐ decl: add debug! macro docs
  ☐ proc-derive: add builder.rs docs
  ☐ proc-fn-like: add manager-of-things proc macro fn docs
  ☐ Publish a new version to crates.io
  ☐ developerlife.com update Rust & Redux article
